name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_NAME: test_db
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DJANGO_SETTINGS_MODULE: your_project_name.settings # Replace with your actual Django settings
      SECRET_KEY: dummy_secret_key_for_ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h 127.0.0.1 -u${DB_USER} -p${DB_PASSWORD} --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Run Flake8 Lint
        run: |
          echo "Running flake8 linting..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
        continue-on-error: false # This causes the build to fail on linting errors

      - name: Run Tests with Coverage
        run: |
          coverage run manage.py migrate
          coverage run --append manage.py test

      - name: Generate Coverage Report
        run: coverage xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
